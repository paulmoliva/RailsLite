c
n
project_root + name
n
s
n
c
project_root + name
name
n
s
n
c
project_root
n
s
n
c
exit
project_root
n
s
n
c
project_root
n
s
n
c
exit
dir
project_root
n
s
n
c
file
n
dir
n
s
n
c
exit
File.expand_path(__FILE__)
__FILE__
File.expand_path("/Desktop")
name
n
s
path
n
c
n
File.dirname(name)
name
n
File.dirname(__FILE__)
File.dirname(path)
File.dirname
dirname
s
n
c
exit
env["PATH_INFO"]
env
env[PATH_INFO]
env[path]
env.methods - Object.methods
env.path
env
exit
c
exit
e.exception
e.methods - Object.methods
e
exit
c
display lineno
c
lineno
display i
i
lineno
c
exit
line_number.to_s.to_i
line_number.to_s
line_number
lineno
c
n
c
n
output
n
s
n
file_name
line_number
n
c
n
file_name
n
c
file_name
n
c
file_name
n
c
file_name
n
c
e.backtrace.to_s
file_name
n
c
file_name
n
c
e.backtrace.to_s
file_name
n
c
exit
e.backtrace.to_s
c
exit
env
c
n
env
c
exit
env
c
/\w+\.rb/.match(e.backtrace.to_s)
/\w+\.erb/.match(e.backtrace.to_s)
line_number
n
c
n
c
n
c
e.backtrace
e.methods.sort
e.message
e
c
e
c
e
c
e
c
e
c
e
c
e
c
e
c
e
c
e
b
e
exit
c
n
self.methods.sort
self.methods
self
name
s
n
c
n
route_params
controller.methods.sort
controller.methods
controller.method
n
c
match_data
display route_params
c
exit
@pattern
match_data
c
proc.inspect
proc
&proc
self.instance_eval(&proc)
display b
exit
display b
b
c
exit
/^\/(\w+)/.match(req.path)[1].capitalize.constantize
/^\/(\w+)/.match(req.path)[1].capitalize
/^\/(\w+)/.match(req.path)[1]
/^\/(\w+)/.match(req.path)
/^\/(\w+)/.match(req.path).to_s.capitalize
exit
/^(\/\w+)/.match(req.path)[1]
/^(\/\w+)/.match(req.path).1
/^(\/\w+)/.match(req.path)
/^(\/\w+)/.match(req.path).to_s.capitalize
exit
/^\/\w+/.match(req.path).to_s.capitalize 
exit
n
exit
req.path
c
n
pattern.match(req.path.to_s)
pattern
n
pattern.match(req.path.to_s)
pattern
req.path
c
pattern
req.path
c
pattern
req.path
c
pattern.match(req.path.to_s)
pattern
req.path
c
pattern.match(req.path.to_s)
pattern
req.path
exit
@http_method
req.request_method
c
n
c
exit
req.cookies
c
@res
@ress
